// This file is auto-generated by @hey-api/openapi-ts

export type Error = {
    data?: {
    [key: string]: unknown;
} | Array<{
    [key: string]: unknown;
}> | null;
    error: {
        status?: number;
        name?: string;
        message?: string;
        details?: {
            [key: string]: unknown;
        };
    };
};

export type ProfileInfoRequest = {
    data: {
        user?: number | string;
        description?: string;
    };
};

export type ProfileInfoListResponseDataItem = {
    id?: number;
    attributes?: ProfileInfo;
};

export type ProfileInfoListResponse = {
    data?: Array<ProfileInfoListResponseDataItem>;
    meta?: {
        pagination?: {
            page?: number;
            pageSize?: number;
            pageCount?: number;
            total?: number;
        };
    };
};

export type ProfileInfo = {
    user?: {
        data?: {
            id?: number;
            attributes?: {
                firstname?: string;
                lastname?: string;
                username?: string;
                email?: string;
                resetPasswordToken?: string;
                registrationToken?: string;
                isActive?: boolean;
                roles?: {
                    data?: Array<{
                        id?: number;
                        attributes?: {
                            name?: string;
                            code?: string;
                            description?: string;
                            users?: {
                                data?: Array<{
                                    id?: number;
                                    attributes?: unknown;
                                }>;
                            };
                            permissions?: {
                                data?: Array<{
                                    id?: number;
                                    attributes?: {
                                        action?: string;
                                        actionParameters?: unknown;
                                        subject?: string;
                                        properties?: unknown;
                                        conditions?: unknown;
                                        role?: {
                                            data?: {
                                                id?: number;
                                                attributes?: unknown;
                                            };
                                        };
                                        createdAt?: string;
                                        updatedAt?: string;
                                        createdBy?: {
                                            data?: {
                                                id?: number;
                                                attributes?: unknown;
                                            };
                                        };
                                        updatedBy?: {
                                            data?: {
                                                id?: number;
                                                attributes?: unknown;
                                            };
                                        };
                                    };
                                }>;
                            };
                            createdAt?: string;
                            updatedAt?: string;
                            createdBy?: {
                                data?: {
                                    id?: number;
                                    attributes?: unknown;
                                };
                            };
                            updatedBy?: {
                                data?: {
                                    id?: number;
                                    attributes?: unknown;
                                };
                            };
                        };
                    }>;
                };
                blocked?: boolean;
                preferedLanguage?: string;
                createdAt?: string;
                updatedAt?: string;
                createdBy?: {
                    data?: {
                        id?: number;
                        attributes?: unknown;
                    };
                };
                updatedBy?: {
                    data?: {
                        id?: number;
                        attributes?: unknown;
                    };
                };
            };
        };
    };
    description?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
        data?: {
            id?: number;
            attributes?: unknown;
        };
    };
    updatedBy?: {
        data?: {
            id?: number;
            attributes?: unknown;
        };
    };
};

export type ProfileInfoResponseDataObject = {
    id?: number;
    attributes?: ProfileInfo;
};

export type ProfileInfoResponse = {
    data?: ProfileInfoResponseDataObject;
    meta?: {
        [key: string]: unknown;
    };
};

export type GetProfileInfosData = {
    /**
     * Fields to return (ex: title,author)
     */
    fields?: string;
    /**
     * Filters to apply
     */
    filters?: {
        [key: string]: unknown;
    };
    /**
     * Locale to apply
     */
    locale?: string;
    /**
     * Number of entities to return (default: 25)
     */
    paginationLimit?: number;
    /**
     * Page number (default: 0)
     */
    paginationPage?: number;
    /**
     * Page size (default: 25)
     */
    paginationPageSize?: number;
    /**
     * Offset value (default: 0)
     */
    paginationStart?: number;
    /**
     * Return page/pageSize (default: true)
     */
    paginationWithCount?: boolean;
    /**
     * Relations to return
     */
    populate?: string;
    /**
     * Sort by attributes ascending (asc) or descending (desc)
     */
    sort?: string;
};

export type GetProfileInfosResponse = ProfileInfoListResponse;

export type PostProfileInfosData = {
    requestBody: ProfileInfoRequest;
};

export type PostProfileInfosResponse = ProfileInfoResponse;

export type GetProfileInfosIdData = {
    id: number;
};

export type GetProfileInfosIdResponse = ProfileInfoResponse;

export type PutProfileInfosIdData = {
    id: number;
    requestBody: ProfileInfoRequest;
};

export type PutProfileInfosIdResponse = ProfileInfoResponse;

export type DeleteProfileInfosIdData = {
    id: number;
};

export type DeleteProfileInfosIdResponse = number;

export type $OpenApiTs = {
    '/profile-infos': {
        get: {
            req: GetProfileInfosData;
            res: {
                /**
                 * OK
                 */
                200: ProfileInfoListResponse;
                /**
                 * Bad Request
                 */
                400: Error;
                /**
                 * Unauthorized
                 */
                401: Error;
                /**
                 * Forbidden
                 */
                403: Error;
                /**
                 * Not Found
                 */
                404: Error;
                /**
                 * Internal Server Error
                 */
                500: Error;
            };
        };
        post: {
            req: PostProfileInfosData;
            res: {
                /**
                 * OK
                 */
                200: ProfileInfoResponse;
                /**
                 * Bad Request
                 */
                400: Error;
                /**
                 * Unauthorized
                 */
                401: Error;
                /**
                 * Forbidden
                 */
                403: Error;
                /**
                 * Not Found
                 */
                404: Error;
                /**
                 * Internal Server Error
                 */
                500: Error;
            };
        };
    };
    '/profile-infos/{id}': {
        get: {
            req: GetProfileInfosIdData;
            res: {
                /**
                 * OK
                 */
                200: ProfileInfoResponse;
                /**
                 * Bad Request
                 */
                400: Error;
                /**
                 * Unauthorized
                 */
                401: Error;
                /**
                 * Forbidden
                 */
                403: Error;
                /**
                 * Not Found
                 */
                404: Error;
                /**
                 * Internal Server Error
                 */
                500: Error;
            };
        };
        put: {
            req: PutProfileInfosIdData;
            res: {
                /**
                 * OK
                 */
                200: ProfileInfoResponse;
                /**
                 * Bad Request
                 */
                400: Error;
                /**
                 * Unauthorized
                 */
                401: Error;
                /**
                 * Forbidden
                 */
                403: Error;
                /**
                 * Not Found
                 */
                404: Error;
                /**
                 * Internal Server Error
                 */
                500: Error;
            };
        };
        delete: {
            req: DeleteProfileInfosIdData;
            res: {
                /**
                 * OK
                 */
                200: number;
                /**
                 * Bad Request
                 */
                400: Error;
                /**
                 * Unauthorized
                 */
                401: Error;
                /**
                 * Forbidden
                 */
                403: Error;
                /**
                 * Not Found
                 */
                404: Error;
                /**
                 * Internal Server Error
                 */
                500: Error;
            };
        };
    };
};